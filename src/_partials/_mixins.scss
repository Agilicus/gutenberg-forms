@import "./variables";

@mixin normalize_button() {
	border: none;
	outline: none;
}

@mixin buttonAlignment() {
	&.justify-start {
		justify-content: start;
	}

	&.justify-center {
		justify-content: center;
	}

	&.justify-end {
		justify-content: flex-end;
	}
}

@mixin defaultSubmit() {
	border: none;
	outline: none;
	padding: 10px 25px;
	letter-spacing: 1px;
}

@mixin field() {
	& input {
		width: 100%;
		padding: 10px 10px;
		transition: 0.5s;
	}

	& input.error {
		border: 1px solid $danger;
		outline: $danger;

		&:focus {
			border: 1px solid $danger;
			outline: $danger;
		}
	}

	& label.error {
		color: $danger;
	}

	& textarea {
		width: 100%;
		padding: 10px 10px;
		max-width: 100%;
		height: 257px;
	}

	& textarea.error {
		border: 1px solid $danger;
		outline: $danger;

		&:focus {
			border: 1px solid $danger;
			outline: $danger;
		}
	}

	& label {
		width: 100%;

		& span {
			color: darken($secondaryColor, 20%);
			font-weight: 600;
		}
	}
}

@mixin checkbox-field($preview_type) {
	@if $preview_type == "backend" {
		& .cwp-checkbox-option {
			display: flex;
			margin: 10px 0px;
			& input[type="text"] {
				width: 100%;
			}

			& input[type="checkbox"] {
				margin: 5px 5px 0px 0px;
			}

			& button {
				background: $danger;
				color: #fff;
				margin: 0px 0px 0px 5px;
				@include normalize_button();
			}
		}

		& .cwp-checkbox-controls {
			& button {
				color: $primaryColor;
				border: 1px solid $primaryColor !important;
				padding: 3px 11px;
				background-color: #fff;
				@include normalize_button();
			}
		}
	} @else {
		& label {
			& span {
				color: darken($secondaryColor, 20%);
				font-weight: 600;
			}
		}

		& .cwp-checkbox-option {
			display: flex;
			margin: 10px 0px;
			position: relative;
			& label {
				width: 100%;
			}

			& input[type="checkbox"] {
				margin: 5px 5px 0px 0px;
			}

			& input[type="checkbox"].error {
				color: $danger;
			}

			& label.error {
				color: $danger;
				position: absolute;
				bottom: -20px;
			}

			& button {
				background: $danger;
				color: #fff;
				margin: 0px 0px 0px 5px;
				@include normalize_button();
			}
		}
	}
}

@mixin radio-field($preview_type) {
	@if $preview_type == "backend" {
		& .cwp-radios-option {
			display: flex;
			margin: 10px 0px;
			& input[type="text"] {
				width: 100%;
			}

			& input[type="radio"] {
				margin: 5px 5px 0px 0px;
			}

			& button {
				background: $danger;
				color: #fff;
				margin: 0px 0px 0px 5px;
				@include normalize_button();
			}
		}

		& .cwp-radios-controls {
			& button {
				color: $primaryColor;
				border: 1px solid $primaryColor !important;
				padding: 3px 11px;
				background-color: #fff;
				@include normalize_button();
			}
		}
	} @else {
		& label {
			& span {
				color: darken($secondaryColor, 20%);
				font-weight: 600;
			}
		}

		& .cwp-radio-option {
			display: flex;
			margin: 10px 0px;
			position: relative;
			& label {
				width: 100%;
			}

			& input[type="radio"] {
				margin: 5px 5px 0px 0px;
			}
			& label.error {
				color: $danger;
				position: absolute;
				bottom: -20px;
			}
			& button {
				background: $danger;
				color: #fff;
				margin: 0px 0px 0px 5px;
				@include normalize_button();
			}
		}
	}
}

@mixin select-field($preview_type) {
	@if $preview_type == "backend" {
		& .cwp-select-option {
			display: flex;
			margin: 10px 0px;
			& input[type="text"] {
				width: 100%;
			}

			& input[type="select"] {
				margin: 5px 5px 0px 0px;
			}

			& button {
				background: $danger;
				color: #fff;
				margin: 0px 0px 0px 5px;
				@include normalize_button();
			}
		}

		& select {
			width: 100%;
			max-width: 100%;
		}

		& .cwp-select-controls {
			& button {
				color: $primaryColor;
				border: 1px solid $primaryColor !important;
				padding: 3px 11px;
				background-color: #fff;
				@include normalize_button();
			}
		}
	} @else {
		& label {
			& span {
				color: darken($secondaryColor, 20%);
				font-weight: 600;
			}
		}

		& label.error {
			color: $danger;
		}

		& select.error {
			outline: $danger;
			border: 1px solid $danger;
		}

		& {
			display: flex;
			flex-direction: column;
			margin: 10px 0px;

			& label {
				width: 100%;
			}
		}
	}
}

@mixin isRequired($type) {
	display: flex;
	flex-direction: row;
	justify-content: flex-end;

	& h3 {
		font-size: 11px;
		margin: 0px 8px !important;
		color: if($type == "noticed", $danger !important, $primaryColor !important);
	}
}

@mixin column() {
	& .cwp-col {
		& .cwp-col_inserter {
			flex-direction: column !important;
		}
	}

	& .block-editor-inner-blocks:nth-child(1) {
		& .block-editor-block-list__layout:nth-child(1) {
			display: flex;
			flex-direction: row;
			justify-content: space-between;

			& [data-type="cwp/column"] {
				width: 50%;
				transform-origin: center center;
				margin: 0px 10px;

				& .cwp-col_inserter {
					& div:nth-child(1) {
						& button {
							width: 100%;
						}
					}
				}
			}
		}
	}
}

@mixin column_introduction() {
	background-color: #eee;
	padding: 30px 10px;

	& h3 {
		margin-left: 10px !important;
	}

	& p {
		margin: 0px 0px 10px 10px;
		font-size: 13px;
	}

	& button.cwp_selector {
		@include normalize_button();
		margin: 0px 10px;
		color: $primaryColor;
		border: 1px solid $primaryColor;
		padding: 10px 14px;

		&:hover {
			background-color: $primaryColor;
			color: #fff;
		}
	}
}

@mixin templateBuilder() {

	& .cwp-builder-field {
		display: block;
		margin: 10px 0px;
		
		& textarea {
			width:100%;
			height: 300px;
		}

		& input {
			width: 100%;
		}
	}

	
}